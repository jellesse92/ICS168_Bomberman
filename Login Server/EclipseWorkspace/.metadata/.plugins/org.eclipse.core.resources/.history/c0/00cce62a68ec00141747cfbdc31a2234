# Generators must be able to iterate through any iterable.
# hide is present and called to ensure that your generator code works on
#   general iterable parameters (not just a string, tuple, list, etc.)
# For example, although we can call len(string) we cannot call
#   len(hide(string)), so the generator functions you write should not
#   call len on their parameters
# Leave hide in this file and add code for the other generators.

def hide(iterable):
    for v in iterable:
        yield v


def running_count(iterable,p):
    count = 0
    for num in iterable:
        if p(num):
            count += 1
        yield count

        
def once_in_a_row(iterable):
    last_item = ''
    for item in iterable:
        if item == last_item:
            pass
        else:
            last_item = item
            yield item 
            

def group(iterable,n = 1):
    yield_group = []
    for item in range(n):
        yield_group.append(iterable.pop(0))
    yield yield_group

        
        
            
            
        


def overlap(iterable,n,m=1):
    pass


def sequence(*args):
    pass

                    
def alternate(*args):
    pass
                

if __name__ == '__main__':
    '''
    print('Testing running_count')
    for i in running_count('bananastand',lambda x : x in 'aeiou'):
        print(i,end=' ')
    print()
    for i in running_count(hide('bananastand'),lambda x : x in 'aeiou'):
        print(i,end=' ')
    print()
    
    
    print('\nTesting once_in_a_row')
    for i in once_in_a_row('abbbcdefffaabccf'):
        print(i,end=' ')
    print()
    for i in once_in_a_row(hide('abbbcdefffaabccf')):
        print(i,end=' ')
    print()
    
    
    print('\nTesting group')
    for i in group('abcdefghijk',3):
        print(i,end=' ')
    print()
    for i in group(hide('abcdefghijk'),3):
        print(i,end=' ')
    print()
    
    
    print('\nTesting overlap')
    for i in overlap('abcdefghijk',3,2):
        print(i,end=' ')
    print()
    for i in overlap(hide('abcdefghijk'),3,2):
        print(i,end=' ')
    print()
    
    
    print('\nTesting sequence')
    for i in sequence('abcde','fg','hijk'):
        print(i,end=' ')
    print()
    for i in sequence(hide('abcde'),hide('fg'),hide('hijk')):
        print(i,end=' ')
    print()
    
    
    print('\nTesting alternate')
    for i in alternate('abcde','fg','hijk'):
        print(i,end=' ')
    print()
    for i in alternate(hide('abcde'),hide('fg'),hide('hijk')):
        print(i,end=' ')
    print()
    
    print()
    '''
    #driver tests
    import driver
    driver.default_file_name = 'bsc3.txt'
#     driver.default_show_exception=True
#     driver.default_show_exception_message=True
#     driver.default_show_traceback=True
    driver.driver()
